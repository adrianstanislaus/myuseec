// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"
	playlists "myuseek/business/playlists"

	mock "github.com/stretchr/testify/mock"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// AddSong provides a mock function with given fields: ctx, domain
func (_m *Repository) AddSong(ctx context.Context, domain playlists.Domain) (playlists.Domain, error) {
	ret := _m.Called(ctx, domain)

	var r0 playlists.Domain
	if rf, ok := ret.Get(0).(func(context.Context, playlists.Domain) playlists.Domain); ok {
		r0 = rf(ctx, domain)
	} else {
		r0 = ret.Get(0).(playlists.Domain)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, playlists.Domain) error); ok {
		r1 = rf(ctx, domain)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Create provides a mock function with given fields: ctx, domain
func (_m *Repository) Create(ctx context.Context, domain playlists.Domain) (playlists.Domain, error) {
	ret := _m.Called(ctx, domain)

	var r0 playlists.Domain
	if rf, ok := ret.Get(0).(func(context.Context, playlists.Domain) playlists.Domain); ok {
		r0 = rf(ctx, domain)
	} else {
		r0 = ret.Get(0).(playlists.Domain)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, playlists.Domain) error); ok {
		r1 = rf(ctx, domain)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetPlaylists provides a mock function with given fields: ctx, domain
func (_m *Repository) GetPlaylists(ctx context.Context, domain playlists.Domain) ([]playlists.Domain, error) {
	ret := _m.Called(ctx, domain)

	var r0 []playlists.Domain
	if rf, ok := ret.Get(0).(func(context.Context, playlists.Domain) []playlists.Domain); ok {
		r0 = rf(ctx, domain)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]playlists.Domain)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, playlists.Domain) error); ok {
		r1 = rf(ctx, domain)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetbyID provides a mock function with given fields: ctx, domain
func (_m *Repository) GetbyID(ctx context.Context, domain playlists.Domain) (playlists.Domain, error) {
	ret := _m.Called(ctx, domain)

	var r0 playlists.Domain
	if rf, ok := ret.Get(0).(func(context.Context, playlists.Domain) playlists.Domain); ok {
		r0 = rf(ctx, domain)
	} else {
		r0 = ret.Get(0).(playlists.Domain)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, playlists.Domain) error); ok {
		r1 = rf(ctx, domain)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RemoveSong provides a mock function with given fields: ctx, domain
func (_m *Repository) RemoveSong(ctx context.Context, domain playlists.Domain) (playlists.Domain, error) {
	ret := _m.Called(ctx, domain)

	var r0 playlists.Domain
	if rf, ok := ret.Get(0).(func(context.Context, playlists.Domain) playlists.Domain); ok {
		r0 = rf(ctx, domain)
	} else {
		r0 = ret.Get(0).(playlists.Domain)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, playlists.Domain) error); ok {
		r1 = rf(ctx, domain)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
